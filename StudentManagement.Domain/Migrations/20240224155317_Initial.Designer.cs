// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentManagement.Domain.DbContexts;

#nullable disable

namespace StudentManagement.Domain.Migrations
{
    [DbContext(typeof(StudentManagementContext))]
    [Migration("20240224155317_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentManagement.Domain.Models.Database.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<long?>("AssigneeId")
                        .HasColumnType("bigint")
                        .HasColumnName("assignee_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("StudentManagement.Domain.Models.Database.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AssigneeIdst")
                        .HasColumnType("bigint")
                        .HasColumnName("assignee_idst");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeIdst");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("students");
                });

            modelBuilder.Entity("StudentManagement.Domain.Models.Database.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.HasKey("Id");

                    b.ToTable("teachers");
                });

            modelBuilder.Entity("StudentManagement.Domain.Models.Database.Course", b =>
                {
                    b.HasOne("StudentManagement.Domain.Models.Database.Student", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeId");

                    b.Navigation("Assignee");
                });

            modelBuilder.Entity("StudentManagement.Domain.Models.Database.Student", b =>
                {
                    b.HasOne("StudentManagement.Domain.Models.Database.Teacher", "Assigneest")
                        .WithMany()
                        .HasForeignKey("AssigneeIdst")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assigneest");
                });
#pragma warning restore 612, 618
        }
    }
}
